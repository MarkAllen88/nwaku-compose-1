name: MarkoP2Pworld

# -------------------------------------------------
# Services
# -------------------------------------------------
services:

  # -------------------------------------------------
  # PostgreSQL – store���message DB for the Waku node
  # -------------------------------------------------
  # image: quay.io/prometheuscommunity/postgres-exporter:latest
  postgres:
    image: postgres:15.4-alpine3.18
    restart: on-failure
    shm_size: "1g"
    # container_name: postgres-exporter
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/postgres?sslmode=disable
    ports:
      - "9187:9187"
    volumes:
      - ./postgres_cfg/postgresql.conf:/etc/postgresql/postgresql.conf:Z
      # - ./postgres_cfg/db.sql:/docker-entrypoint-initdb.d/db.sql:Z
      - ./postgresql:/var/lib/postgresql/data:Z
      - ./etc/postgres_exporter.yml:/etc/postgres_exporter.yml:ro
    command:
      - postgres -c config_file=/etc/postgresql/postgresql.conf
      - ["--config.file=/etc/postgres_exporter.yml"]
    healthcheck:
      # CORRECT: Healthcheck uses the variable to stay in sync.
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # -------------------------------------------------
  # postgres‑exporter – scrapes metrics from the DB
  # -------------------------------------------------
  postgres-exporter:
    # image: quay.io/prometheuscommunity/postgres-exporter:v0.15.0 # Pinned version
    image: quay.io/prometheuscommunity/postgres-exporter:latest
    restart: on-failure
    environment:
      # CORRECT: Connection string is built dynamically from .env variables.
      DATA_SOURCE_NAME: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/postgres?sslmode=disable
    ports:
      - "9187:9187"
    volumes:
      - ./postgres_exporter.yml:/etc/postgres_exporter.yml:ro
    depends_on:
      postgres:
        condition: service_healthy

  # -------------------------------------------------
  # nwaku – the Waku node (metrics exposed on 8003)
  # -------------------------------------------------
  nwaku:
    image: wakuorg/nwaku:v0.19.0
    restart: unless-stopped
    env_file: .env
    environment:
      # Pass the DB URL into the container so the command can use it.
      STORE_MESSAGE_DB_URL: ${STORE_MESSAGE_DB_URL}
    expose:
      - "8003"                         # metrics port reachable inside the Docker network
    ports:
      - "9091:9091"                    # host‑side mapping for manual curl / browser checks
      - "30304:30304/tcp"
      - "30304:30304/udp"
      - "9005:9005/udp"
      - "8000:8000/tcp"
    volumes:
      - ${CERTS_DIR:-./certs}:/etc/letsencrypt/:Z
      - ./rln_tree:/etc/rln_tree/:Z
      - ./keystore:/keystore:Z
      - ./data:/data
    entrypoint: ""
    command:
      # FIX: Ensure `wakunode2` is the first item in the command list.
      - wakunode2
      - --relay=true
      - --store=true
      # - --log-level=INFO
      - --log-level=DEBUG
      # - --log-level=TRACE
      # FIX: Replaced '--metrics-addr' with the correct flags for nwaku v0.19.0
      - --metrics-server=true
      - --metrics-server-address=0.0.0.0
      - --metrics-server-port=9091
      - --rest=true
      - --rest-admin=true
      - --rest-address=0.0.0.0
      - --rest-port=8645
      # FIX: Use the variable for the DB URL, not a hardcoded string.
      - --store-message-db-url=${STORE_MESSAGE_DB_URL}
      - --store-message-retention-policy=${RETENTION_POLICY}
      - --rln-relay-eth-client-address=${RLN_RELAY_ETH_CLIENT_ADDRESS}
      - --rln-relay-cred-password=${RLN_RELAY_CRED_PASSWORD}
    networks:
      default:
        aliases:
          - nwaku
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8003/metrics || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 10s

  # -------------------------------------------------
  # Prometheus – scrapes the exporter (and any other targets)
  # -------------------------------------------------
  prometheus:
    image: prom/prometheus:v2.51.2 # Pinned version
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus-config.yml:/etc/prometheus/prometheus.yml:Z
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.retention.size=5GB
    restart: on-failure
    depends_on:
      - postgres-exporter
      - nwaku

  # -------------------------------------------------
  # Grafana – visualises the metrics
  # -------------------------------------------------
  grafana:
    image: grafana/grafana:10.4.2 # Pinned version
    ports:
      - "3000:3000"
    env_file:
      - ./monitoring/configuration/grafana-plugins.env
    volumes:
      - ./monitoring/configuration/grafana.ini:/etc/grafana/grafana.ini:Z
      - ./monitoring/configuration/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml:Z
      - ./monitoring/configuration/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml:Z
      - ./monitoring/configuration/dashboards:/var/lib/grafana/dashboards/:Z
      - ./monitoring/configuration/customizations/custom-logo.svg:/usr/share/grafana/public/img/grafana_icon.svg:Z
      - ./monitoring/configuration/customizations/custom-logo.svg:/usr/share/grafana/public/img/grafana_typelogo.svg:Z
      - ./monitoring/configuration/customizations/custom-logo.png:/usr/share/grafana/public/img/fav32.png:Z
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=MyNewSecret123!
    restart: on-failure
    depends_on:
      - prometheus
# -------------------------------------------------
# Volumes (outside any service)
# -------------------------------------------------
volumes:
  grafana-data:

# -------------------------------------------------
# Networks (Docker will create a default bridge if omitted)
# -------------------------------------------------
networks:
  default:
    driver: bridge

